[{"D:\\aprojects\\test\\test\\src\\index.js":"1","D:\\aprojects\\test\\test\\src\\reportWebVitals.js":"2","D:\\aprojects\\test\\test\\src\\App.js":"3","D:\\aprojects\\test\\test\\src\\data.js":"4","D:\\aprojects\\test\\test\\src\\components\\navbar\\Navbar.js":"5","D:\\aprojects\\test\\test\\src\\components\\banner\\Banner.js":"6","D:\\aprojects\\test\\test\\src\\components\\cards_slides\\Slider.js":"7","D:\\aprojects\\test\\test\\src\\components\\navbar\\submenu\\Submenu.js":"8","D:\\aprojects\\test\\test\\src\\context.js":"9","D:\\aprojects\\test\\test\\src\\components\\home\\Home.js":"10","D:\\aprojects\\test\\test\\src\\components\\productpage\\ProductPage.js":"11","D:\\aprojects\\test\\test\\src\\components\\cards_slides\\Card.js":"12","D:\\aprojects\\test\\test\\src\\components\\cards_slides\\CardsOrSlider.js":"13"},{"size":580,"mtime":1616857961384,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":572,"mtime":1618705954857,"results":"17","hashOfConfig":"15"},{"size":73869,"mtime":1625748462094,"results":"18","hashOfConfig":"15"},{"size":5255,"mtime":1625479509518,"results":"19","hashOfConfig":"15"},{"size":1680,"mtime":1622525888566,"results":"20","hashOfConfig":"15"},{"size":3438,"mtime":1622819361188,"results":"21","hashOfConfig":"15"},{"size":2488,"mtime":1616847551967,"results":"22","hashOfConfig":"15"},{"size":488,"mtime":1616858034981,"results":"23","hashOfConfig":"15"},{"size":245,"mtime":1622525709823,"results":"24","hashOfConfig":"15"},{"size":19104,"mtime":1625749872468,"results":"25","hashOfConfig":"15"},{"size":2047,"mtime":1622824281739,"results":"26","hashOfConfig":"15"},{"size":846,"mtime":1625478921211,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1y6l8lp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\aprojects\\test\\test\\src\\index.js",[],["57","58"],"D:\\aprojects\\test\\test\\src\\reportWebVitals.js",[],"D:\\aprojects\\test\\test\\src\\App.js",[],"D:\\aprojects\\test\\test\\src\\data.js",["59"],"D:\\aprojects\\test\\test\\src\\components\\navbar\\Navbar.js",["60"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Submenu from \"./submenu/Submenu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiMap, BiCaretDown, BiCartAlt, BiSearchAlt } from \"react-icons/bi\";\r\nimport { BsFillCaretDownFill } from \"react-icons/bs\";\r\nimport \"./navbar.css\";\r\nimport { searchCategories } from \"../../data\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nexport default function Navbar() {\r\n  // SUBMENU STATE\r\n  const { subMenuOpen, setsubMenuOpen } = useGlobalContext();\r\n  // SUBMENU POSITION STATE\r\n  const [subMenuCenter, setSubMenuCenter] = useState({});\r\n  // WHICH SUBMENU TO MOUNT (language or account)\r\n  const [subMenuType, setSubMenuType] = useState(\"\");\r\n  // SUBMENU REFRECNE\r\n  const subRef = useRef(null);\r\n  // SELECTED LANGUAGE STATE\r\n  const [selectedlanguage, setSelectedLanguage] = useState(\"English - En\");\r\n  // SELECTBOX STATE\r\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\r\n  // SELECTED CATEGORY\r\n  const [selectedCat, setSelectedCat] = useState(\"all\");\r\n\r\n  // CALLED TO SHOW SUBMENU IN ITS PLACE\r\n  const showSubMenu = (e) => {\r\n    setsubMenuOpen(true);\r\n    setSubMenuType(e.target.getAttribute(\"data-type\"));\r\n    const elementPosition = e.target.getBoundingClientRect(),\r\n      center = {\r\n        right: elementPosition.right,\r\n        top: elementPosition.bottom + 4,\r\n      };\r\n    setSubMenuCenter(center);\r\n  };\r\n\r\n  // CALLED TO SPECIFY SUBMENU POSITION\r\n  useEffect(() => {\r\n    const submenu = subRef.current;\r\n    if (submenu) {\r\n      submenu.style.left = `${subMenuCenter.right}px`;\r\n      submenu.style.top = `${subMenuCenter.top}px`;\r\n      submenu.style.opacity = \"1\";\r\n    }\r\n  }, [subMenuCenter]);\r\n  return (\r\n    <nav className=\"navbar\" onMouseLeave={() => setsubMenuOpen(false)}>\r\n      <div className=\"container-fluid\">\r\n        {subMenuOpen && (\r\n          <div\r\n            className=\"submenu\"\r\n            ref={subRef}\r\n            onMouseEnter={() => setsubMenuOpen(true)}\r\n            onMouseLeave={() => setsubMenuOpen(false)}\r\n          >\r\n            <Submenu\r\n              setsubMenuOpen={setsubMenuOpen}\r\n              type={subMenuType}\r\n              selectedlanguage={selectedlanguage}\r\n              center={subMenuCenter}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"nav-left\">\r\n          <Link to=\"/\">\r\n            <div className=\"logo-container\">\r\n              <img\r\n                src=\"http://pngimg.com/uploads/amazon/amazon_PNG25.png\"\r\n                alt=\"logo\"\r\n                className=\"logo\"\r\n              />\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"deliverto\">\r\n            <BiMap className=\"map-icon\" />\r\n            <div className=\"text\">\r\n              <div>delive to</div>\r\n              <div>Egypt</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <form className=\"search\">\r\n          <div\r\n            className=\"select\"\r\n            onClick={() => setIsSelectOpen(!isSelectOpen)}\r\n          >\r\n            <div className=\"selected\">\r\n              <span>{selectedCat}</span>\r\n              <BsFillCaretDownFill className=\"icon\" />\r\n            </div>\r\n            <ul className={`select-ul ${isSelectOpen ? `` : `hidden`}`}>\r\n              {searchCategories.map((cat, index) => {\r\n                return (\r\n                  <li onClick={() => setSelectedCat(cat)} key={index}>\r\n                    {cat}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <input type=\"text\" placeholder=\"search by name and category\" />\r\n          <div className=\"search-icon\">\r\n            <BiSearchAlt />\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"nav-right\">\r\n          <div\r\n            className=\"lang-select position-relative\"\r\n            onMouseEnter={showSubMenu}\r\n          >\r\n            <Link\r\n              to=\"/language\"\r\n              className=\"overlay\"\r\n              data-type=\"language\"\r\n            ></Link>\r\n            <img\r\n              src=\"https://icons.iconarchive.com/icons/wikipedia/flags/512/US-United-States-Flag-icon.png\"\r\n              alt=\"flag\"\r\n              className=\"lang-flag\"\r\n            />\r\n            <BiCaretDown />\r\n          </div>\r\n\r\n          <div\r\n            className=\"greeting position-relative\"\r\n            onMouseEnter={showSubMenu}\r\n          >\r\n            <Link to=\"/account\" className=\"overlay\" data-type=\"account\"></Link>\r\n            <div className=\"line-one\">hello, ibrahim</div>\r\n            <div className=\"list-container\">\r\n              <div className=\"line-two\">account &amp; lists</div>\r\n              <BiCaretDown />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"reutrns-and-orders\">\r\n            <Link to=\"/returns&amp;oreders\">\r\n              <div className=\"line-one\">returns</div>\r\n              <div className=\"line-two\">&amp; orders</div>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"cart\">\r\n            <div className=\"icon-w-num\">\r\n              <span>0</span>\r\n              <BiCartAlt className=\"icon\" />\r\n            </div>\r\n            <span className=\"text\">cart</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","D:\\aprojects\\test\\test\\src\\components\\banner\\Banner.js",[],"D:\\aprojects\\test\\test\\src\\components\\cards_slides\\Slider.js",[],"D:\\aprojects\\test\\test\\src\\components\\navbar\\submenu\\Submenu.js",["61","62","63","64"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./submenu.css\";\r\nimport { languages, accountLinks } from \"../../../data\";\r\nimport { useTransition, animated } from \"react-spring\";\r\n\r\nexport default function Submenu({ type, selectedlanguage }) {\r\n  // const animateSubMenu = useTransition(true, {\r\n  //   from: { opacity: 0 },\r\n  //   enter: { opacity: 1 },\r\n  //   leave: { opacity: 0 },\r\n  // });\r\n  const Language = () => {\r\n    return (\r\n      <>\r\n        <span>change language</span>\r\n        <Link to=\"#\">learn more</Link>\r\n        <div className=\"selected-language\">\r\n          {languages.map((lang) => {\r\n            if (lang === selectedlanguage) {\r\n              return (\r\n                <Link to=\"#\">\r\n                  <div className=\"radio-box\">\r\n                    <span className=\"radio-circle\">\r\n                      <span className=\"radio-dot\"></span>\r\n                    </span>\r\n                    <span className=\"lang-name\">{lang}</span>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        <div className=\"languages\">\r\n          {languages.map((lang) => {\r\n            if (lang !== selectedlanguage) {\r\n              return (\r\n                <div className=\"radio-box\">\r\n                  <Link to=\"#\">\r\n                    <span className=\"radio-circle\"></span>\r\n                    <span className=\"lang-name\">{lang}</span>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Account = () => {\r\n    return (\r\n      <div className=\"account\">\r\n        <div>\r\n          <h5>your lists</h5>\r\n          <div className=\"link-box\">\r\n            <Link to=\"#\">create list</Link>\r\n          </div>\r\n          <div className=\"link-box\">\r\n            <Link to=\"#\">find a list or directory</Link>\r\n          </div>\r\n          <div className=\"link-box\">\r\n            <Link to=\"#\">amazon smile</Link>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h4>your account</h4>\r\n          {accountLinks.map((link) => {\r\n            return (\r\n              <div className=\"link-box\">\r\n                <Link to=\"#\">{link}</Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (type === \"language\") {\r\n    return <Language />;\r\n  } else if (type === \"account\") {\r\n    return <Account />;\r\n  }\r\n\r\n  return null;\r\n}\r\n","D:\\aprojects\\test\\test\\src\\context.js",[],"D:\\aprojects\\test\\test\\src\\components\\home\\Home.js",[],"D:\\aprojects\\test\\test\\src\\components\\productpage\\ProductPage.js",["65","66","67","68","69","70","71","72","73","74","75","76"],"D:\\aprojects\\test\\test\\src\\components\\cards_slides\\Card.js",[],"D:\\aprojects\\test\\test\\src\\components\\cards_slides\\CardsOrSlider.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1904,"column":7,"nodeType":"83","messageId":"84","endLine":1904,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":20,"column":28,"nodeType":"83","messageId":"84","endLine":20,"endColumn":47},{"ruleId":"81","severity":1,"message":"86","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":23},{"ruleId":"81","severity":1,"message":"87","line":5,"column":25,"nodeType":"83","messageId":"84","endLine":5,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":19,"column":33,"nodeType":"90","messageId":"91","endLine":19,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":35,"column":33,"nodeType":"90","messageId":"91","endLine":35,"endColumn":35},{"ruleId":"81","severity":1,"message":"92","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":20},{"ruleId":"81","severity":1,"message":"93","line":14,"column":22,"nodeType":"83","messageId":"84","endLine":14,"endColumn":31},{"ruleId":"81","severity":1,"message":"94","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":22},{"ruleId":"81","severity":1,"message":"95","line":48,"column":10,"nodeType":"83","messageId":"84","endLine":48,"endColumn":21},{"ruleId":"81","severity":1,"message":"96","line":50,"column":10,"nodeType":"83","messageId":"84","endLine":50,"endColumn":24},{"ruleId":"81","severity":1,"message":"97","line":50,"column":26,"nodeType":"83","messageId":"84","endLine":50,"endColumn":43},{"ruleId":"81","severity":1,"message":"98","line":137,"column":9,"nodeType":"83","messageId":"84","endLine":137,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":162,"column":42,"nodeType":"90","messageId":"91","endLine":162,"endColumn":44},{"ruleId":"88","severity":1,"message":"99","line":181,"column":35,"nodeType":"90","messageId":"100","endLine":181,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":265,"column":21,"nodeType":"103","endLine":265,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":389,"column":21,"nodeType":"103","endLine":392,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":404,"column":21,"nodeType":"103","endLine":407,"endColumn":22},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'icons' is assigned a value but never used.","Identifier","unusedVar","'setSelectedLanguage' is assigned a value but never used.","'useTransition' is defined but never used.","'animated' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FiFacebook' is defined but never used.","'FiTwitter' is defined but never used.","'ImPinterest2' is defined but never used.","'colorFilter' is assigned a value but never used.","'filterProducts' is assigned a value but never used.","'setFilterProducts' is assigned a value but never used.","'filterProdColor' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]